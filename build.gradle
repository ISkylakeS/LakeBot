/*
 * Copyright 2017-2018 (c) Alexander "ISkylake" Shevchenko
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    ext.kotlin_version = '1.2.41'

    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'java'
}

jar {
    manifest {
        attributes 'Main-Class': 'io.iskylake.lakebot.LakeBotKt'
    }
}

group 'io.iskylake.lakebot'
version '0.3.2'

apply plugin: 'kotlin'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()

    maven {
        name 'jitpack'
        url 'https://jitpack.io'
    }

    jcenter()
}

dependencies {
    compile "net.dv8tion:JDA:3.6.0_367"
    compile "org.slf4j:slf4j-simple:1.7.5"
    compile "org.json:json:20171018"
    compile "net.glxn.qrgen:javase:2.0"
    compile "com.sedmelluq:lavaplayer:1.2.63"
    compile "org.codehaus.groovy:groovy:3.0.0-alpha-1"
    compile "com.google.guava:guava:24.1-jre"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-script-runtime:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-compiler:$kotlin_version"
    runtime "org.jetbrains.kotlin:kotlin-compiler-embeddable:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-script-util:$kotlin_version"
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

compileKotlin {
    kotlinOptions.freeCompilerArgs = ["-Xenable-jvm-default"]
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.freeCompilerArgs = ["-Xenable-jvm-default"]
    kotlinOptions.jvmTarget = "1.8"
}
kotlin {
    experimental {
        coroutines "enable"
    }
}